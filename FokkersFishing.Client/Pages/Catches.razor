@page "/catches"
@inject HttpClient HttpClient
@using BlazorTable
@using System.ComponentModel

<div class="main">

    @if (catches == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <button type="button" class="btn btn-primary" @onclick="@((x) => AddNewCatch())">Add</button>
        <Table TableItem="Catch" Items="catches" PageSize="15" @ref="Table">
            <Column TableItem="Catch" Title="Catch Number" Field="@(x => x.CatchNumber)" Sortable="true" Filterable="true" Width="10%" DefaultSortColumn="true" />
            <Column TableItem="Catch" Title="Global Catch Number" Field="@(x => x.GlobalCatchNumber)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Catch" Title="Catch Date" Field="@(x => x.CatchDate)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Catch" Title="Fish" Field="@(x => x.Fish)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Catch" Title="Fish Length" Field="@(x => x.Length)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Catch" Title="Log Date" Field="@(x => x.LogDate)" Sortable="true" Filterable="true" Width="10%" />
            <Column TableItem="Catch" Title="Edit" Field="@(x => x.Id)" Width="10%">
                <Template>
                    <button type="button" class="btn btn-primary btn-sm" @onclick="@((x) => EditCatch(@context.Id))">Edit</button>
                </Template>
            </Column>
            <Pager ShowPageNumber="true" ShowTotalCount="true" />
        </Table>
        <EditCatch currentCatch="@currentCatch"/>
    }
</div>


@code {
    //https://github.com/IvanJosipovic/BlazorTable/blob/master/src/BlazorTable.Sample.Shared/Pages/Index.razor

    List<Catch> catches;
    private ITable<Catch> Table;
    public Catch currentCatch;

    // TODO: get from db
    List<Fish> fishOptions = new List<Fish>
{
        new Fish() { Name = "Pike"},
        new Fish() { Name = "Zander"},
        new Fish() { Name = "Bass"}
    };

    protected async override Task OnInitializedAsync()
    {
        catches = await HttpClient.GetJsonAsync<List<Catch>>("catch");
        currentCatch = catches.FirstOrDefault();
    }

    private async void AddNewCatch()
    {
        Catch newCatch = new Catch
        {
            Length = 0,
            Fish = "Pike"
        };

        newCatch = await HttpClient.PostJsonAsync<Catch>("catch", newCatch);
        catches.Add(newCatch);
        Table.Items = catches;
        Table.Update();
    }

    private void EditCatch(Guid id)
    {
        currentCatch = catches.FirstOrDefault(x => x.Id == id);
        Console.WriteLine(currentCatch.CatchNumber);
    }





}
